name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
      - name: Get Poetry cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/cache/
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Get pip cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install MkDocs
        run: pip install mkdocs
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.2
      - name: Install dependencies with Poetry
        run: poetry install
      - name: Build documentation
        run: ./build.sh
        env:
          POSTGRES_URI: postgres://username:password@localhost:5432/db
      - name: Upload built site
        uses: actions/upload-artifact@v1
        with:
          name: site
          path: site
  style:
    name: Check style

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Check style with Prettier
        run: yarn run style
